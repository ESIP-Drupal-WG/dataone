<?php

/**
 * @file
 * dataone.module
 */

define('DATAONE_PERMISSION_ADMINISTER_CONFIG', 'administer dataone configuration');
define('DATAONE_VARIABLE_MEMBER_NODE_IDENTIFIER', 'dataone_mn_identifier');
define('DATAONE_VARIABLE_API_VERSIONS', 'dataone_mn_api_versions');
define('DATAONE_VARIABLE_API_STATUS', 'dataone_mn_api_online_');
define('DATAONE_VARIABLE_API_ENDPOINT', 'dataone_mn_api_endpoint_paths_');
define('DATAONE_VARIABLE_API_MAX_LOG_COUNT', 'dataone_mn_api_log_count_');
define('DATAONE_DEFAULT_MAX_LOG_RECORDS', '50');
define('DATAONE_CN_STAGING_ENDPOINT', '');
define('DATAONE_CN_PRODUCTION_ENDPOINT', '');
define('DATONE_URL_NODE_REGISTRATION', 'https://releases.dataone.org/online/api-documentation-v1.2.0/design/NodeIdentity.html#node-registration');

/**
 * Implements hook_menu().
 */
function dataone_menu() {
  $items['admin/config/services/dataone'] = array(
    'title' => 'DataONE Member Node',
    'description' => 'Settings for configuring a DataONE Member Node',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array(DATAONE_PERMISSION_ADMINISTER_CONFIG),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/services/dataone/settings'] = array(
    'title' => 'DataONE Settings',
    'description' => 'Configure a DataONE Member Node.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dataone_admin_settings'),
    'access arguments' => array(DATAONE_PERMISSION_ADMINISTER_CONFIG),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'dataone.admin.inc',
  );

  // Publish version-specific menu paths.
  $versions = variable_get(DATAONE_VARIABLE_API_VERSIONS, array());
  foreach ($versions as $version_id) {

  }

  return $items;
}

/**
 * Implements hook_permission().
 */
function dataone_permission() {

  return array(
    DATAONE_PERMISSION_ADMINISTER_CONFIG => array(
      'title' => t('Administer DataONE Configuration'),
      'description' => t(''),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Get the possible Member Node API versions.
 *
 * @return array
 *   Associative array of possible values for this Member Node's API versions.
 */
function _dataone_api_version_options() {
  $options = &drupal_static(__FUNCTION__);
  if (empty($options)) {
    $options = array(
      'v1' => t('Version 1'),
      'v2' => t('Version 2'),
    );
  }

  return $options;
}
